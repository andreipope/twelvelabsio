openapi: 3.0.0
info:
  title: Twelve Labs Video Understanding API
  description: |
    Use the Twelve Labs Video Understanding API to extract information from your videos and make it available to your applications. The API is organized around REST and returns responses in the JSON format. It is compatible with most programming languages, and you can also use Postman or other REST clients to send requests and view responses.

    ## Call an Endpoint
    
    To call an endpoint, you must construct a URL similar to the following one:
    ```
    {Method} {BaseURL}/{version}/{resource}/{path_parameters}?{query_parameters}
    ```

    The list below describes each component of a request:
    - **Method**: The API supports the following methods:
      - `GET`: Reads data.
      - `POST`: Creates a new object or performs an action.
      - `PUT`: Updates an object.
      - `DELETE``: Deletes an object.
      Note that the `POST` and `PUT` methods require you to pass a request body containing additional parameters.
    - **Base URL**: The base URL of the API is https://api.twelvelabs.io.
    - **Version:** Must be set to `v1``.
    - **Resource**: The name of the resource you want to interact with.
    - **Path Parameters**: Allow you to indicate a specific object. For example, you can retrieve details about an engine or index. 
    - **Query Parameters**: Any parameters that an endpoint accepts. For example, you can filter or sort a response using query parameters.
    Note that the API requires you to pass a header parameter containing your API key to authenticate each request. For details, see the [Authentication](/guides/authentication) page.
  version: 1.0.0
x-stoplight:
  id: 8y4w11j9s7zjg
servers:
  - url: 'https://api.twelvelabs.io/v1'
tags:
  - name: Engines
    description: Everything related to engines.
  - name: Indexes
    description: Everything related to indexes.
  - name: Indexes/Tasks
    description: Everything related to video indexing tasks.
  - name: Indexes/Tasks/Transfers
    description: Everything related to cloud-to-cloud transfers
  - name: Indexes/Videos
    description: Everything related to video vectors.
  - name: Search
    description: Everything related to searches.
paths:
  /engines:
    get:
      summary: List Search Engines
      description: List all the search engines that are available in your account.
      operationId: listEngines
      tags:
        - Engines
      parameters:
        - $ref: '#/components/parameters/x-api-key'
        - $ref: '#/components/parameters/Content-Type'
      responses:
        '200':
          $ref: '#/components/responses/getEnginesResponse'
        '400':
          $ref: '#/components/responses/genericError'
  '/engines/{engine-id}':
    get:
      summary: Retrieve a Search Engine
      description: Retrieve a search engine
      operationId: retrieveSearchEngine
      tags:
        - Engines
      parameters:
        - $ref: '#/components/parameters/x-api-key'
        - $ref: '#/components/parameters/Content-Type'
        - name: engine-id
          in: path
          description: |
            The identifier of the engine to retrieve.
            
            The following search engines are available:
            - `marengo2`
            - `marengo`
            For details about the features of each search engine, see the [Search Engines](/concepts/search-engines) page.
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/getEngineResponse'
        '400':
          $ref: '#/components/responses/genericError'
  /indexes:
    post:
      summary: Create an Index
      description: Create an index.
      operationId: createIndex
      tags:
        - Indexes
      parameters:
        - $ref: '#/components/parameters/x-api-key'
        - $ref: '#/components/parameters/Content-Type'
      requestBody:
        $ref: '#/components/requestBodies/createIndex'
      responses:
        '200':
          $ref: '#/components/responses/createIndexResponse'
        '400':
          description: The request has failed.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error_code:
                    type: string
                    description: |
                      Represents the code associated with the error. See the [Error Codes](/api-reference/error-codes) page for details.
                  message:
                    type: string
                    description: |
                      A human-readable string describing the error.
    get:
      summary: List indexes
      description: 'Returns a list of the indexes in your account. The API returns indexes sorted by creation date, with the oldest indexes at the top of the list.'
      operationId: listIndexes
      tags:
        - Indexes
      parameters:
        - $ref: '#/components/parameters/x-api-key'
        - $ref: '#/components/parameters/Content-Type'
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/page_limit'
        - $ref: '#/components/parameters/sort_by'
        - $ref: '#/components/parameters/sort_option'
        - name: _id
          in: query
          description: Filter by the unique identifier of an index.
          required: false
          schema:
            type: string
        - name: index_name
          in: query
          description: Filter by the name of the index.
          required: false
          schema:
            type: string
        - name: index_options
          in: query
          description: |
            Filter by the indexing options. When filtering multiple indexing options, the values must be comma-separated.
            Example: `index_options=visual,conversation`.
          required: false
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/getIndexesResponse'
        '400':
          description: The request has failed.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error_code:
                    type: string
                    description: |
                      Represents the code associated with the error. See the [Error Codes](/api-reference/error-codes) page for details.
                  message:
                    type: string
                    description: |
                      A human-readable string describing the error.
  '/indexes/{index-id}':
    get:
      summary: Retrieve an Index.
      description: Retrieve details about the specified index.
      operationId: retrieveIndex
      tags:
        - Indexes
      parameters:
        - $ref: '#/components/parameters/x-api-key'
        - $ref: '#/components/parameters/Content-Type'
        - name: index-id
          in: path
          description: |
            Unique identifier of the index to retrieve.
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/getIndexResponse'
        '400':
          $ref: '#/components/responses/genericError'
    put:
      summary: Update an Index
      description: Update an index.
      operationId: updateIndex
      tags:
        - Indexes
      parameters:
        - $ref: '#/components/parameters/x-api-key'
        - $ref: '#/components/parameters/Content-Type'
        - name: index-id
          in: path
          description: |
            Unique identifier of the index to update.
          required: true
          schema:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/updateIndex'
      responses:
        '200':
          $ref: '#/components/responses/updateIndexResponse'
        '400':
          description: The request has failed.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error_code:
                    type: string
                    description: |
                      Represents the code associated with the error. See the [Error Codes](/api-reference/error-codes) page for details.
                  message:
                    type: string
                    description: A human-readable string describing the error.
    delete:
      summary: Delete an index
      description: Delete the specified index and all the video indexes within it. This action cannot be undone.
      operationId: deleteIndex
      tags:
        - Indexes
      parameters:
        - $ref: '#/components/parameters/x-api-key'
        - $ref: '#/components/parameters/Content-Type'
        - name: index-id
          in: path
          description: |
            Unique identifier of the index to delete.
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/deleteIndexResponse'
        '400':
          description: The request has failed.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error_code:
                    type: string
                    description: |
                      Represents the code associated with the error. See the [Error Codes](/api-reference/error-codes) page for details.
                  message:
                    type: string
                    description: A human-readable string describing the error.
  /indexes/tasks:
    post:
      summary: Create a Video Indexing Task
      description: |
        Create a new video indexing task to upload a video to the API service and make it searchable. Note the following about creating a new video indexing task:
        - To upload a file that resides on the local file system, pass the `video_file` parameter. It must be a stream of bytes encoded as `multipart/form-data`.
        - To upload a file from a publicly accessible URL, pass the `video_url` parameter with the URL of your video. It must be a `string`.
        - You must specify at least one of the `video_file` and `video_url` parameters. If you specify both the `video_url` and `video_file` parameters in the same request, the `video_url` parameter takes precedence over `video_file`.
        - To provide a transcription file, you must set the `provide_transcription` parameter to `true` and specify at least one of the `transcription_file` and `transcription_url` parameters:
          - Use the `transcription_file`` parameter to provide a transcription from the local file system. It must be a stream of bytes encoded as `multipart/form-data`.
          - Use the `transcription_url`` parameter to provide a transcription file from a publicly accessible URL. It must be a `string`.
      operationId: createVideoIndexingTask
      tags:
        - Indexes/Tasks
      requestBody:
        $ref: '#/components/requestBodies/createVideoIndexingTask'
      parameters:
        - $ref: '#/components/parameters/x-api-key'
        - name: Content-Type
          in: header
          description: Must be set to `multipart/form-data`.
          required: true
          schema:
            type: string
            enum:
              - multipart/form-data
      responses:
        '200':
          $ref: '#/components/responses/createVideoIndexingTaskResponse'
        '400':
          description: The request has failed.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error_code:
                    type: string
                    description: |
                      Represents the code associated with the error. See the [Error Codes](/api-reference/error-codes) page for details.
                  message:
                    type: string
                    description: A human-readable string describing the error.
    get:
      summary: List Video Indexing Tasks
      description: |
        Returns a list of the video indexing tasks in your account. If no parameters are specified, the API returns your video indexing tasks sorted by creation date, with the newest at the top of the list.
        
        **NOTE**: When using this endpoint, you can set up webhooks to receive notifications. For details, see the [Webhooks](/guides/webhooks) section.
      operationId: listVideoIndexingTasks
      tags:
        - Indexes/Tasks
      parameters:
        - $ref: '#/components/parameters/x-api-key'
        - $ref: '#/components/parameters/Content-Type'
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/page_limit'
        - $ref: '#/components/parameters/sort_by'
        - $ref: '#/components/parameters/sort_option'
        - name: _id
          in: query
          description: |
            Filter by the unique identifier of a video indexing task. 
          required: false
          schema:
            type: string
        - name: index_id
          in: query
          description: |
            Filter by the unique identifier of an index.
          required: false
          schema:
            type: string
        - name: filename
          in: query
          description: |
            Filter by filename.
          required: false
          schema:
            type: string
        - name: duration
          in: query
          description: |
            Filter by duration. Expressed in seconds.
          required: false
          schema:
            type: integer
        - name: width
          in: query
          description: |
            Filter by width.
          required: false
          schema:
            type: integer
        - name: height
          in: query
          description: |
            Filter by height.
          required: false
          schema:
            type: integer
        - name: created_at
          in: query
          description: |
            Filter by the date and time, in the [RFC 3339](https://datatracker.ietf.org/doc/html/rfc3339) format, that the video indexing task was created.
          required: false
          schema:
            type: string
        - name: updated_at
          in: query
          description: |
            Filter by the date and time, in the [RFC 3339](https://datatracker.ietf.org/doc/html/rfc3339) format, that the video indexing task was updated.
          required: false
          schema:
            type: string
        - name: estimated_time
          in: query
          description: |
            Filter by the date and time, in the [RFC 3339](https://datatracker.ietf.org/doc/html/rfc3339) format, that the video indexing task is ready to be searched.
          schema:
            type: integer
      responses:
        '200':
          $ref: '#/components/responses/getVideoIndexingTasksResponse'
        '400':
          $ref: '#/components/responses/genericError'
  '/indexes/tasks/{task-id}':
    get:
      summary: Retrieve a Video Indexing Task
      description: Retrieve a video indexing task.
      operationId: retrieveVideoIndexingTask
      tags:
        - Indexes/Tasks
      parameters:
        - $ref: '#/components/parameters/x-api-key'
        - $ref: '#/components/parameters/Content-Type'
        - name: task-id
          in: path
          description: |
            The unique identifier of the video indexing task to retrieve.
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/getVideoIndexingTaskResponse'
        '400':
          $ref: '#/components/responses/genericError'
  '/indexes/tasks/{task-id}/video-id':
    get:
      summary: Retrieve the Video ID Associated with a Task ID
      description: 'Provide the ID of a video indexing task, and the API service will return the corresponding video ID.'
      operationId: retrieveVideoIdTaskId
      tags:
        - Indexes/Tasks
      parameters:
        - $ref: '#/components/parameters/x-api-key'
        - $ref: '#/components/parameters/Content-Type'
        - name: task-id
          required: true
          in: path
          description: |
            A task ID that the API returned when you created a video indexing task.
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/getVideoVectorIdResponse'
        '400':
          $ref: '#/components/responses/genericError'
  /indexes/tasks/transfers:
    post:
      summary: Make a Cloud-to-Cloud Transfer
      description: |
        Use the `indexes/tasks/transfers` endpoint to perform cloud-to-cloud transfers that allow you to group multiple video indexing operations in a single API request by sending a `multipart/form-data` request. The request body must specify a JSON file that contains an array. Each element of the array represents a file to be uploaded and indexed and has the following fields:
        - `index_id`: The unique identifier of the index with which the video file will be associated.
        - `language`: The language of your video.
        - `object`: The S3 URL of your video.
        - `transcription`: The S3 URL of your transcription.
      parameters:
        - $ref: '#/components/parameters/x-api-key'
        - name: Content-Type
          in: header
          description: Must be set to `multipart/form-data`.
          required: true
          schema:
            type: string
            enum:
              - multipart/form-data
      operationId: cloud-to-cloud-transfer
      tags:
        - Indexes/Tasks/Transfers
      requestBody:
        $ref: '#/components/requestBodies/cloud-to-cloud-transfer'
      responses:
        '200':
          $ref: '#/components/responses/cloudToCloudTransferResponse'
        '400':
          $ref: '#/components/responses/genericError'
  '/indexes/{index-id}/videos':
    get:
      summary: List Video Vectors.
      operationId: listVideoVectors
      description: |
        Returns a list of the video vectors in the specified index. If no parameters are specified, the API returns your video vectors sorted by creation date, with the newest at the top of the list.
      tags:
        - Indexes/Videos
      parameters:
        - $ref: '#/components/parameters/x-api-key'
        - $ref: '#/components/parameters/Content-Type'
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/page_limit'
        - $ref: '#/components/parameters/sort_by'
        - $ref: '#/components/parameters/sort_option'
        - name: index-id
          in: path
          description: The unique identifier of the index for which the API will retrieve the video vectors.
          schema:
            type: string
          required: true
        - name: _id
          in: query
          description: |
            Filter by the unique identifier of a video index.
          required: false
          schema:
            type: string
        - name: filename
          in: query
          description: |
            Filter by filename.
          required: false
          schema:
            type: string
        - name: duration
          in: query
          description: |
            Filter by duration. Expressed in seconds.
          schema:
            type: number
        - name: fps
          in: query
          description: |
            Filter by frames per second.
          required: false
          schema:
            type: number
        - name: width
          in: query
          description: |
            Filter by width.
          required: false
          schema:
            type: number
        - name: height
          in: query
          description: |
            Filter by height.
          required: false
          schema:
            type: integer
        - name: size
          in: query
          description: |
            Filter by size. Expressed in bytes.
          required: false
          schema:
            type: number
        - name: created_at
          in: query
          description: |
            Filter by the date and time, in the [RFC 3339](https://datatracker.ietf.org/doc/html/rfc3339) format, that the video indexing task was created.
          required: false
          schema:
            type: string
        - name: updated_at
          in: query
          description: |
            Filter by the date and time, in the [RFC 3339](https://datatracker.ietf.org/doc/html/rfc3339) format, that the video indexing task was updated.
          required: false
          schema:
            type: string
        - name: indexed_at
          in: query
          description: |
            Filter by the date and time, in the [RFC 3339](https://datatracker.ietf.org/doc/html/rfc3339) format, that the video has finished indexing.
          required: false
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/getVideoVectorsResponse'
        '400':
          $ref: '#/components/responses/genericError'
  '/indexes/{index-id}/videos/{video-id}':
    get:
      summary: Retrieve a Video Vector
      description: Retrieve a video vector.
      operationId: retrieveVideoVector
      tags:
        - Indexes/Videos
      parameters:
        - $ref: '#/components/parameters/x-api-key'
        - $ref: '#/components/parameters/Content-Type'
        - name: index-id
          in: path
          description: |
            The unique identifier of the index with which the video vector is associated.
          required: true
          schema:
            type: string
        - name: video-id
          in: path
          description: |
            The unique identifier of the video vector to retrieve.
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/getVideoVectorResponse'
        '400':
          $ref: '#/components/responses/genericError'
    delete:
      summary: Delete a video vector.
      operationId: deleteVideoVector
      tags:
        - Indexes/Videos
      description: |
        Delete the specified video vector. This action cannot be undone.
      parameters:
        - $ref: '#/components/parameters/x-api-key'
        - $ref: '#/components/parameters/Content-Type'
        - name: index-id
          in: path
          description: |
            The unique identifier of the index with which the video vector is associated.
          required: true
          schema:
            type: string
        - name: video-id
          in: path
          description: |
            The unique identifier of the video vector to delete.
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/deleteVideoVectorResponse'
        '400':
          $ref: '#/components/responses/genericError'
  '/indexes/{index-id}/videos/{video-id}/transcription':
    get:
      summary: Retrieve a Transcription of the Spoken Words
      description: Retrieve a transcription of the spoken words.
      operationId: retrieveTranscription
      tags:
        - Indexes/Videos
      parameters:
        - $ref: '#/components/parameters/x-api-key'
        - $ref: '#/components/parameters/Content-Type'
        - name: index-id
          in: path
          description: |
            The unique identifier of the index with which the video vector is associated.
          required: true
          schema:
            type: string
        - name: video-id
          in: path
          description: |
            The unique identifier of the video vector for which you want to retrieve a transcription.
          required: true
          schema:
            type: string
        - name: start
          in: query
          description: |
            The start of the time range (in seconds) to retrieve transcription for.
          required: false
          schema:
            type: number
        - name: end
          in: query
          description: |
            The end of the time range (in seconds) to retrieve transcription for.
          required: false
          schema:
            type: number
      responses:
        '200':
          $ref: '#/components/responses/retrieveTranscriptionResponse'
        '400':
          $ref: '#/components/responses/genericError'
  '/indexes/{index-id}/videos/{video-id}/text-in-video':
    get:
      summary: Retrieve Text Recognized in a Video (OCR)
      description: Retrieve text recognized in a video (OCR).
      operationId: retrieveOCR
      tags:
        - Indexes/Videos
      parameters:
        - $ref: '#/components/parameters/x-api-key'
        - $ref: '#/components/parameters/Content-Type'
        - name: index-id
          in: path
          description: |
            The unique identifier of the index with which the video vector is associated.
          required: true
          schema:
            type: string
        - name: video-id
          in: path
          description: |
            The unique identifier of the video vector.
          required: true
          schema:
            type: string
        - name: start
          in: query
          description: |
            The start of the time range (in seconds) to retrieve OCRs for.
          required: false
          schema:
            type: number
        - name: end
          in: query
          description: |
            The end of the time range (in seconds) to retrieve OCRs for.
          required: false
          schema:
            type: number
      responses:
        '200':
          $ref: '#/components/responses/retrieveOcrResponse'
        '400':
          $ref: '#/components/responses/genericError'
  /search:
    post:
      summary: Make a Search Request.
      tags:
        - Search
      description: |
        Use the `/search` endpoint to search for relevant matches in an index. This endpoint supports pagination and filtering.

        **NOTE**: When you use pagination, you will not be charged for retrieving subsequent pages of results.
      operationId: search
      requestBody:
        $ref: '#/components/requestBodies/search'
      parameters:
        - $ref: '#/components/parameters/x-api-key'
        - $ref: '#/components/parameters/Content-Type'
        - name: next-page-id
          in: query
          description: |
            A token that identifies the page to retrieve. If not specified, the API returns the first page.
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/searchResultsResponse'
        '400':
          $ref: '#/components/responses/genericError'
components:
  schemas:
    engine:
      description: ''
      title: Engine
      type: object
      properties:
        _id:
          type: string
          description: |
            A string representing the identifier of the search engine.
        allowed_index_options:
          type: array
          description: |
            An array of strings representing the supported indexing options. For details, see the [Indexing Options](/concepts/indexing-options) page.
          items:
            type: string
        author:
          type: string
          description: |
            A string indicating who created the index.
        created_at:
          type: string
          description: |
            A string representing the date and time, in the [RFC 3339](https://datatracker.ietf.org/doc/html/rfc3339) format, that the engine was created.
        updated_at:
          type: string
          description: |
            A string representing the date and time, in the [RFC 3339](https://datatracker.ietf.org/doc/html/rfc3339) format, that the engine was updated.
        finetune:
          type: boolean
          description: |
            A boolean indicating whether this engine supports fine-tunning. This feature is on the [roadmap](/roadmap).
        ready:
          type: boolean
          description: A boolean specifying whether this engine is ready to be used.
        type:
          type: string
          description: Specifies the type of resource (`engine`).
      example:
        id: marengo2
        created_at: '2022-07-04 03:05:27.068 +0000 UTC'
        updated_at: '2022-07-04 03:05:27.068 +0000 UTC'
        allowed_index_options:
          - visual
          - text_in_video
          - conversation
        author: twelve_labs
        finetune: false
        ready: true
        type: engine
    index:
      title: Index
      description: |
        An index groups one or more videos stored as vectors and is the most granular level at which you can perform a search.
      type: object
      properties:
        _id:
          type: string
          description: |
            A string representing the unique identifier of the index. It is assigned by the API when an index is created.
        index_name:
          type: string
          description: |
            A string representing the name of the index.
        index_options:
          type: array
          description: |
            An array of strings that determines how the engine processes your videos.
            
            Twelve Labs currently offers three different indexing options: `visual`, `conversation`, and `text_in_video`. For more details, see the [Indexing Options](/concepts/indexing-options) page.

            **NOTES**:
            - The indexing options cannot be changed once the index has been created.
            - The types of searches you can perform on this index are a subset of the indexing options.
          items:
            type: string
            enum:
              - visual
              - conversation
              - text_in_video
        created_at:
          type: string
          description: |
            A string representing the date and time, in the [RFC 3339](https://datatracker.ietf.org/doc/html/rfc3339) format, that the index was created.
        updated_at:
          type: string
          description: |
            A string representing the date and time, in the [RFC 3339](https://datatracker.ietf.org/doc/html/rfc3339) format, that the index was updated.
        engine_id:
          type: string
          description: |
            A string representing the unique identifier of the engine that the API will use to index the videos in this index.
        video_count:
          type: integer
          description: |
            An integer representing the number of video vectors in the index.
        total_duration:
          type: number
          description: |
            A number representing the total duration, in seconds, of the videos in the index.
      example:
        _id: 62d9bafa90077fc60af827a0
        index_name: myIndex
        index_options:
          - visual
          - text_in_video
          - conversation
        created_at: '2022-07-04T13:58:39.262Z'
        updated_at: '2022-07-05T11:11:32.026Z'
        engine_id: marengo2
        video_count: 12
        total_duration: 8716.8969
    videoIndexingTask:
      title: Video Indexing Task
      description: |
        A task represents a request to upload and index a video. A task starts when you begin uploading your video by calling the **POST** method of the `indexes/tasks` endpoint, and it can have one of the following statuses:
        - **Validating**: Your video has finished uploading, and the API service is validating it by performing the following checks:
          - Resolution must be greater or equal than 360p and less than 1080p (FHD).
          - Duration must be between 15 seconds and 2 hours (7,200s).
          - Your video must contain an audio track.
          - Your video must not have missing frames.
        - **Pending**: The API is spawning a new worker server to process your video.
        - **Indexing**: The API is transforming the video you uploaded into vectors. A vector is like a compressed version of the video and contains all the information that Twelve Labs' deep-learning models need to perform fast, semantic, accurate, and scalable searches.
        - **Ready**: Your video is ready to be searched.
        Additionally, you may receive one of the following error messages:
        - **Broken Video File**: Your video has broken frame(s) or does not contain an audio track.
        - **Failed**: The API service encountered an internal error, and the video indexing task failed.
        The `task` object has the following elements:
      type: object
      properties:
        _id:
          type: string
          description: |
            A string representing the unique identifier of the task. It is assigned by the API service when a new task is created.
        created_at:
          type: string
          description: 'A string indicating the date and time, in the RFC 3339 format, that the task was created.'
        updated_at:
          type: string
          description: |
            A string indicating the date and time, in the RFC 3339 format, that the task object was last updated. The API service updates this field every time the video indexing task transitions to a different state.
        status:
          type: string
          description: A string indicating the status of the video indexing task.
        estimated_time:
          type: string
          description: |
            A string indicating the estimated date and time, in the RFC 3339 format, that the video is ready to be searched.
        index_id:
          type: string
          description: |
            A string pointing to the index to which the video is assigned.
        metadata:
          type: object
          description: |
            An object that contains information about the video.
          properties:
            duration:
              type: number
            filename:
              type: string
            height:
              type: integer
            width:
              type: integer
      example:
        _id: 62a17bf847f5678267ec10cc
        created_at: 2022-06-09T04:50:00.879Z
        updated_at: 2022-06-09T04:55:57.256Z
        status: ready
        estimated_time: 2022-06-09T04:55:53.746Z
        index_id: 630aff993fcee0532cb809d0
        metadata:
          duration: 531.998133
          filename: 01.mp4
          height: 480
          width: 854

    videoVector:
      type: object
      title: Video Vector
      description: |
        When the API service indexes a video, it doesn't store it. Instead, the API service saves all the required information needed to perform fast, semantic, accurate, and scalable searches as lists of floating numbers. These lists are named video vectors.

        The video_vector object has the following elements:
      properties:
        _id:
          type: string
          description: |
            A string representing the unique identifier of a video vector. The API service creates a new video_vector object and assigns it a unique identifier when the video has successfully been indexed, and it's ready to be searched. Note that video vector IDs are different from task IDs. To map a task ID to a video vector ID, see the Retrieve a [Video Vector ID Based on a Task ID](/operations/retrieveVideoIdTaskId) section.
        created_at:
          type: string
          description: |
            A string indicating the date and time, in the RFC 3339 format, that the video indexing task was created.
        updated_at:
          type: string
          description: |
            A string indicating the date and time, in the RFC 3339 format, that the video indexing task object was last updated. The API service updates this field every time the video indexing task transitions to a different state.
        indexed_at:
          type: string
          description: |
            A string indicating the date and time, in the RFC 3339 format, that the video has finished indexing.
        metadata:
          type: object
          description: |
            An object that contains information about the video.
          properties:
            filename:
              type: string
              example: 01.mp4
            duration:
              type: number
            fps:
              type: number
            width:
              type: integer
            height:
              type: integer
            size:
              type: number
      example:
        _id: 62bac61c154f59c87660cea3
        created_at: 2022-06-28T09:12:54
        updated_at: 2022-06-28T09:13:00Z
        indexed_at: 2022-06-28T09:26:42Z
        metadata:
          filename: 01.mp4
          duration: 741.875
          fps: 741.875
          width: 640
          height: 360
          size: 65749715

  parameters:
    Content-Type:
      name: Content-Type
      in: header
      description: Must be set to `application/json`.
      required: true
      schema:
        type: string
        enum:
          - application/json
    x-api-key:
      name: x-api-key
      in: header
      description: |
        Your API key.
        
        **NOTE:** You can find your API key on the [Dashboard](https://api.twelvelabs.io/dashboard) page.
      required: true
      schema:
        type: string
    page:
      name: page
      in: query
      description: |
        A number that identifies the page to retrieve.
            
        **Default**: `1`.
      schema:
        type: integer
      required: false
    page_limit:
      name: page_limit
      in: query
      description: |
        The number of items to return on each page.

        **Default**: `10`.

        **Max**: `100`.
      schema:
        type: integer
      required: false
    sort_by:
      name: sort_by
      in: query
      description: |
        The field to sort on. The following options are available:
        - `updated_at`: Sorts by the time, in the [RFC 3339](https://datatracker.ietf.org/doc/html/rfc3339) format, when the item was updated.
        - `created_at`: Sorts by the time, in the [RFC 3339](https://datatracker.ietf.org/doc/html/rfc3339) format, when the item was created.
        **Default**: `created_at`.
      schema:
        type: string
      required: false
    sort_option:
      name: sort_option
      in: query
      description: |
        The sorting direction. The following options are available:
        - `asc` 
        - `desc`
        **Default**: `desc`.
      schema:
        type: string
      required: false
  responses:
    cloudToCloudTransferResponse:
      description: One or more video indexing tasks index has successfully been created.
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
                description: A human-readable string describing the result.
              type:
                type: string
                description: A human-readable string describing the type of operation.
          example:
            message: Succesfully requested indexing task
            type: index_task_create
    updateIndexResponse:
      description: The specified index has successfully been updated.
      content:
        application/json:
          schema:
            properties:
              message:
                type: string
                description: A human-readable string describing the result.
              type:
                type: string
                description: Describes the type of operation.
            example:
              message: Succesfully updated index 'myIndex'.
              type: update_index

    searchResultsResponse:
      description: Successfully performed a search request.
      content:
        application/json:
          schema:
            type: object
            properties:
              conversation_option:
                type: string
                description: |
                  Indicates the type of search the API performed.
              data:
                type: array
                description: An array that contains your search results. For each match found, the search engine returns the following fields.
                items:
                  type: object
                  properties:
                    score:
                      type: number
                      description: A quantitative value determined by the AI engine representing the similarity score between your search terms and the matching video fragment.
                    start:
                      type: number
                      description: Start time of the matching video fragment, expressed in seconds.
                    end:
                      type: number
                      description: End time of the matching video fragment, expressed in seconds.
                    video_id:
                      type: string
                      description: A string representing the unique identifier of the video vector. Once the API service indexes a video, it assigns a unique identifier. Note that this is different from the identifier of the video indexing task. To map the identifier of a video indexing task to the identifier of a video vector, you can use the `/indexes/tasks/:task-id/video-idendpoint`. For details, see the Retrieve a Video Vector ID Based on a Task ID section.
                    metadata:
                      type: array
                      description: An array that contains details about each result. It has the following fields.
                      items:
                        type: object
                        properties:
                          type:
                            type: string
                            description: A string that indicates the type of match (`visual`, `conversation`, `text_in_video`).
                          text:
                            type: string
                            description: For `conversation` and `text_in_video`, the API returns a transcription of the spoken words or the text that matches your search query.
                    confidence:
                      type: string
                      description: |
                        A qualitative indicator measured by the internal QA team based on the value of the score field. This field can take one of the following values:
                        - `high`: For scores greater than 90 and less than 100
                        - `medium`: For scores greater than 80 and less than 90
                        - `low`: For scores greater than 70 and less than 80
                        - `extremely low`: for scores greater than 70 and less than 80
              page_info:
                type: object
                description: An object that provides information about pagination. It has the following fields.
                properties:
                  limit_per_page:
                    type: integer
                    description: The maximum number of items on each page.
                  page_expired_at:
                    type: string
                    description: A string representing the date and time, in the [RFC 3339](https://datatracker.ietf.org/doc/html/rfc3339) format, that the page expires.
                  total_results:
                    type: integer
                    description: The total number of results.
                  next_page_id:
                    type: string
                    description: The unique identifier of the next page.
              query:
                type: string
                description: The search query you specified.
              search_options:
                type: array
                description: The search options you used.
              search_pool:
                type: object
                description: An object that contains details about the index you queried.
              type: 
                type: string
                description: Describes the type of operation (`search_create`).
          example:
            conversation_option: semantic
            data:
              - score: 92.49
                start: 312
                end: 344
                metadata:
                  - type: visual
                  - type: conversation
                    text:  Now on this old pit straight can Hamilton's try and get back ahead of max Verstappen and he's trying to get a slipstream as well. Hamilton's going to try and dance around the outside for staff and stays ahead british crowd roaring their approval for this duel on the first lap of 17, trying to go around the outside of cops.
                video_id: 62d860deb0a389f9f568cde9
                confidence: high
              - score: 91.45
                start: 36
                end: 42
                metadata:
                  - type: visual
                video_id: 62d860deb0a389f9f568cde9
                confidence: high
              - score: 91.45
                start: 36
                end: 42
                metadata:
                  - type: visual
                video_id: 62d860deb0a389f9f568cde9
                confidence: high
              - score: 91.38
                start: 220
                end: 260
                metadata:
                - type: visual
                - type: conversation
                  text: Then in second place Perez is trying to fight back Hamilton and Bottas getting involved as well on the inside there goes Lando Norris has to pull out before he hit Sergio Perez and the two Mercedes well swapping places there has got himself into a bit of a pickle but he has come out on top and ahead of his teammate Sergio Perez now turn four, trying to go the long way round the outside, his jewel continues with Lando Norris as he now goes onto the gravel and he loses six or seven places as a result of that Norris is not a man to back out, he will get his elbows out whenever he can.
                video-id: 62d860deb0a389f9f568cde9
                confidence: high
              - score: 91.02
                start: 364
                end: 376
                metadata:
                - type: visual
                video_id: 62d860deb0a389f9f568cde9
                confidence: high
              - score: 90.47
                start: 444
                end: 454
                metadata:
                - type: visual
                video_id: 62d860deb0a389f9f568cde9
                confidence: high
              - score: 90.29
                start: 386
                end: 430
                metadata:
                - type: visual
                video_id: 62d860deb0a389f9f568cde9
                confidence: high
              - score: 89.64
                start: 174
                end: 194
                metadata:
                - type: visual
                video_id: 62d860deb0a389f9f568cde9
                confidence: high
              - score: 89.52
                start: 300
                end: 312
                metadata:
                - type: visual
                video_id: 62d860deb0a389f9f568cde9
                confidence: high
              - score: 89.2
                start: 550
                end: 568
                metadata:
                - type: visual
                video_id: 62d860deb0a389f9f568cde9
                confidence: high
              - score: 89.16
                start: 128
                end: 142
                metadata:
                - type: visual
                video_id: 62d860deb0a389f9f568cde9
                confidence: high
            page_info:
              limit_per_page: 10
              next_page_id: edd92402-0329-4122-9f0c-a9c4dad5d263-1
              page_expired_at: 2022-07-20T20:35:47Z
              total_results: 140
            query: winning the race
            search_options:
              - conversation
              - visual
            search_pool:
              index_id: 62d85fe7340fa665f1fda5dd
              total_count: 2
              total_duration: 1163
            type: search_create

    retrieveTranscriptionResponse:
      description: Transcription has successfully been retrieved.
      content:
        application/json:
          schema:
            properties:
              _id:
                type: string
                description: The unique identifier of the video vector.
              data:
                type: array
                description: An array of objects that contains the transcription. For each time range for which the API service finds spoken words, it returns an object that contains the fields below. If the API service doesn't find any spoken words, the data field is set to `None`.
                items:
                  type: object
                  properties:
                    start:
                      type: number
                      description: The start of the time range, expressed in seconds.
                    end:
                      type: number
                      description: The end of the time range, expressed in seconds.
                    value:
                      type: string
                      description: Text representing the spoken words within this time range.
              index_id:
                type: string
                description: The unique identifier of the index with which the video is associated.
              type:
                type: string
                description: Describes the type of operation (`video_index_meta_transcription`).
          example:
            _id: 61e17c1c777e6caec646fa08
            data:
              - end: 8.86
                start: 4.34
                value: 'Hello?'
              - end: 10.95
                start: 9.56
                value: ' Yeah,'
            index_id: 61e165b061c43d6d9b73627b
            type: video_index_transcription

    retrieveOcrResponse:
      description: OCRs have successfully been retrieved.
      content:
        application/json:
          schema:
            properties:
              _id:
                type: string
                description: The unique identifier of the video vector.
              data:
                type: array
                description: |
                  An array that contains the OCR elements. For each time range for which the API service finds OCR elements, it returns an object that contains the fields below.
                  If the API service doesn't find any OCR elements, the `data` field is set to `None`.
                items:
                  type: object
                  properties:
                    start:
                      description: 'The start of the time range, expressed in seconds.'
                      type: number
                    end:
                      description: 'The end of the time range, expressed in seconds.'
                      type: number
                    value:
                      description: |
                        Recognized text within this time range.
                      type: string
              index_id:
                type: string
                description: The unique identifier of the index with which the video is associated.
                example: 61e165b061c43d6d9b73627b
              type:
                type: string
                description: Describes the type of operation.
                example: video_index_meta_text_in_video
          example:
            _id: 61e17c1c777e6caec646fa08
            data:
              - start: 22
                end: 42
                value: LIVE
              - start: 23
                end: 24
                value: VISITE SAO PAULO
              - start: 23
                end: 24
                value: TED KRAVITZ
            index_id: 61e165b061c43d6d9b73627b
            type: video_index_meta_text_in_video

    getVideoVectorsResponse:
      description: The video indexes associated with the specified index have successfully been retrieved.
      content:
        application/json:
          schema:
            properties:
              data:
                type: array
                description: An array that contains up to page_limit video vectors.
                items:
                  $ref: '#/components/schemas/videoVector'
              page_info:
                type: object
                properties:
                  limit_per_page:
                    type: integer
                    description: The maximum number of items on each page.
                  page:
                    type: integer
                    description: The page you retrieved.
                  total_page:
                    type: integer
                    description: The total number of pages.
                  total_results:
                    type: integer
                    description: The total number of results.
              type:
                type: string
                description: Describes the type of operation.
                example: video_index_list

            example:
              data:
                - _id: 62a17bf847f5678267ec10cc
                  created_at: '2022-06-09T04:50:00.879Z'
                  estimated_time: '2022-06-09T04:55:53.746Z'
                  index_id: 62a0906d47f5678267ec10a6
                  metadata:
                    duration: 531.998133
                    filename: 01.mp4
                    height: 400
                    width: 854
                  status: ready
                  updated_at: '2022-06-09T04:55:57.256Z'
                - _id: 62a17bce47f5678267ec10c6
                  created_at: '2022-06-09T04:49:20.001Z'
                  estimated_time: '2022-06-09T04:53:59.772Z'
                  index_id: 62a0906d47f5678267ec10a6
                  metadata:
                    duration: 741.875
                    filename: 02.mp4
                    height: 480
                    width: 854
                  status: ready
                  updated_at: '2022-06-09T04:54:10.345Z'
              page_info:
                limit_per_page: 10
                page: 1
                total_page: 1
                total_results: 2
              type: index_task_list

    getVideoVectorIdResponse:
      description: The corresponding video ID has successfully been retrieved.
      content:
        application/json:
          schema:
            properties:
              _id:
                type: string
                description: A string representing the ID of the video vector. The API returns this field only when the value of the `status` field is `ready`.
              exist:
                type: boolean
                description: A boolean specifying whether the video is ready to be searched. The API service returns `true` when the value of the status field is `ready` and `false` otherwise.
              type:
                type: string
                description: Describes the type of operation.
            example:
              _id: 629dea98f05c91527bc5c1c8
              exist: true
              type: index_task_video_id
    getVideoVectorResponse:
      description: The specified video vector has successfully been retrieved.
      content:
        application/json:
          schema:
            properties:
              _id: 
                type: string
                description: The unique identifier of the video vector.
              created_at:
                type: string
                description: A string indicating the date and time, in the [RFC 3339](https://datatracker.ietf.org/doc/html/rfc3339) format, that the video indexing task was created.
              updated_at: 
                type: string
                description: A string indicating the date and time, in the [RFC 3339](https://datatracker.ietf.org/doc/html/rfc3339) format, that the corresponding video indexing task was last updated. The API service updates this field every time the corresponding video indexing task transitions to a different state.
              indexed_at:
                type: string
                description: A string indicating the date and time, in the [RFC 3339](https://datatracker.ietf.org/doc/html/rfc3339) format, that the video has finished indexing.
              metadata:
                type: object
                description: An object that contains the information about the video.
                properties:
                  duration:
                    type: number
                  filename:
                    type: string
                  fps:
                    type: number
                  height:
                    type: integer
                  width:
                    type: integer
              type:
                type: string
                description: Describes the type of operation (`video_index_info`).
            example:
              _id: 61e17be5777e6caec646fa07
              created_at: 2022-01-14T13:34:29Z
              updated_at: 2022-01-14T13:34:29Z
              indexed_at: 2022-01-14T14:05:55Z
              metadata:
                duration: 3747.841667
                filename: IOKgzkakhlk.mp4
                fps: 29.97002997002997
                height: 360
                width: 482
              type: video_index_item

    getIndexResponse:
      description: The specified index has successfully been retrieved.
      content:
        application/json:
          schema:
            properties:
              data:
                type: object
                description: An object that contains an `index` object.
                properties:
                  _id:
                    type: string
                    description: A string representing the unique identifier of the index. It is assigned by the API when an index is created.
                  created_at:
                    type: string
                    description: A string representing the date and time, in the [RFC 3339](https://datatracker.ietf.org/doc/html/rfc3339) format, that the index was created.
                  engine_id:
                    type: string
                    description: A string representing the unique identifier of the engine that the API will use to index the videos in this index.
                  index_name:
                    type: string
                    description: A string representing the name of the index.
                  index_options:
                    type: array
                    description: |
                      Must be a subset of `["visual", "conversation", "text_in_video"]`.

                      **NOTES**:
                      - Twelve Labs strongly recommends you use marengo2.
                      - You cannot change the engine once the index has been created.
                  updated_at:
                    type: string
                    description: A string representing the date and time, in the [RFC 3339](https://datatracker.ietf.org/doc/html/rfc3339) format, that the index was updated.
                  total_duration:
                    type: number
                    description: A number representing the total duration, in seconds, of the videos in the index.
              type:
                type: string
                description: Describes the type of operation (`get_index`).
          example:
            data:
              _id: 62d9bafa90077fc60af827a0
              index_name: myIndex
              index_options:
                - visual
                - text_in_video
                - conversation
              created_at: 2022-07-04T13:58:39.262Z
              updated_at: 2022-07-05T11:11:32.026Z
              engine_id: marengo2
              video_count: 12
              total_duration: 8716.8969
            type: get_index
    getVideoIndexingTasksResponse:
      description: The video indexing tasks have successfully been retrieved.
      content:
        application/json:
          schema:
            properties:
              data:
                type: array
                description: An array that contains up to `page_limit` tasks.
                items:
                  $ref: '#/components/schemas/videoIndexingTask'
              page_info:
                type: object
                properties:
                  limit_per_page:
                    type: integer
                    description: The maximum number of items on each page.
                  page:
                    type: integer
                    description: The page you retrieved.
                  total_page:
                    type: integer
                    description: The total number of pages.
                  total_results:
                    type: integer
                    description: The total number of results.
              type:
                type: string
                description: Describes the type of operation.
          example:
            data:
              - _id: 62a17bf847f5678267ec10cc
                created_at: '2022-06-09T04:50:00.879Z'
                estimated_time: '2022-06-09T04:55:53.746Z'
                index_id: 62a0906d47f5678267ec10a6
                metadata:
                  duration: 531.998133
                  filename: 01.mp4
                  height: 400
                  width: 854
                status: ready
                updated_at: '2022-06-09T04:55:57.256Z'
              - _id: 62a17bce47f5678267ec10c6
                created_at: '2022-06-09T04:49:20.001Z'
                estimated_time: '2022-06-09T04:53:59.772Z'
                index_id: 62a0906d47f5678267ec10a6
                metadata:
                  duration: 741.875
                  filename: 02.mp4
                  height: 480
                  width: 854
                status: ready
                updated_at: '2022-06-09T04:54:10.345Z'
            page_info:
              limit_per_page: 10
              page: 1
              total_page: 1
              total_results: 2
            type: index_task_list



    getVideoIndexingTaskResponse:
      description: The specified video indexing task has successfully been retrieved.
      content:
        application/json:
          schema:
            properties:
              _id:
                type: string
                description: The unique identifier of the video indexing task.
              created_at:
                type: string
                description: A string indicating the date and time, in the [RFC 3339](https://datatracker.ietf.org/doc/html/rfc3339) format, that the task object has been created.
              updated_at:
                type: string
                description: A string indicating the date and time, in the [RFC 3339](https://datatracker.ietf.org/doc/html/rfc3339) format, that the task object was last updated. The API service updates this field every time the video indexing task transitions to a different state.
              estimated_time:
                type: string
                description: A string indicating the estimated date and time, in the [RFC 3339](https://datatracker.ietf.org/doc/html/rfc3339) format, that the video is ready to be searched.
              index_id:
                type: string
                description: A string pointing to the index to which the video is assigned.
              metadata:
                type: object
                description: An object that contains details about the video.
                properties:
                  duration:
                    type: number
                  filename:
                    type: string
                  height:
                    type: integer
                  width:
                    type: integer
              status:
                type: string
                description: A string indicating the status of the video indexing task.
              type:
                type: string
                description: Describes the type of operation (`index_task_item`).
          example:
            _id: 61e1789761c43d6d9b7362f3
            created_at: 2022-01-14T13:20:22.986Z
            updated_at: 2022-01-17T08:35:21.639Z
            estimated_time: 2022-01-14T14:18:52.175Z
            index_id: 61e165b061c43d6d9b73627b
            metadata:
              duration: 4334.0297
              filename: WPK3hvTr8PU.mp4
              height: 360
              width: 544
            status: indexing
            type: index_task_item



    getIndexesResponse:
      description: The indexes have successfully been retrieved.
      content:
        application/json:
          schema:
            properties:
              data:
                type: array
                description: An array that contains up to `page_limit` indexes.
                items:
                  $ref: '#/components/schemas/index'
              page_info:
                type: object
                description: An object that provides information about pagination.
                properties:
                  limit_per_page:
                    description: The maximum number of items on each page.
                    type: integer
                  page:
                    description: The page you retrieved.
                    type: integer
                  total_page:
                    description: The total number of pages.
                    type: integer
                  total_results:
                    description: The total number of results. 
                    type: integer
              type:
                type: string
                description: Describes the type of operation (`index_list`).
            example:
              data:
                - _id: 62d85fe7340fa665f1fda5dd
                  index_name: index-01
                  index_options:
                    - visual
                    - conversation
                    - text_in_video
                  created_at: '2022-07-20T20:04:55.776Z'
                  updated_at: '2022-07-20T20:04:55.776Z'
                  engine_id: marengo2
                  video_count: 2
                  total_duration: 1363.76
                - _id: 62d858ee340fa665f1fda5d8
                  index_name: index-02
                  index_options:
                    - visual
                    - conversation
                    - text_in_video
                  created_at: '2022-07-20T19:35:10.385Z'
                  updated_at: '2022-07-20T19:35:10.385Z'
                  engine_id: marengo2
                  video_count: 1
                  total_duration: 579.12
              page_info:
                limit_per_page: 10
                page: 1
                total_page: 1
                total_results: 2
              type: index_list

    deleteVideoVectorResponse:
      description: The specified video vector has successfully been deleted.
      content:
        application/json:
          schema:
            properties:
              message:
                type: string
              type:
                type: string
          example:
            message: Succesfully deleted video index '61dea7ed6c20ec075ebba8f5'.
            type: delete_video_index
    deleteIndexResponse:
      description: The specified index has successfully been deleted.
      content:
        application/json:
          schema:
            properties:
              message:
                type: string
                description: A human-readable string describing the result.
                example: Successfully deleted index 'myIndex'.
              type:
                type: string
                description: Describes the type of operation.
                example: index_delete
    createVideoIndexingTaskResponse:
      description: A video indexing task has successfully been created.
      content:
        application/json:
          schema:
            properties:
              _id:
                type: string
                description: A string representing the unique identifier of the `task` object.
              message:
                type: string
                description: A human-readable string describing the result.
              type:
                type: string
                description: Describes the type of operation (`index_task_create`).
          example:
            _id: 62a1ec6d9ea24f052b971a0f
            message: Succesfully requested indexing tasks.
            type: index_task_create
    getEngineResponse:
      description: The specified engine has successfully been retrieved
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/engine'
    getEnginesResponse:
      description: The search engines have successfully been retrieved.
      content:
        application/json:
          schema:
            properties:
              data:
                type: array
                description: An array that contains the `engine` objects.
                items:
                  $ref: '#/components/schemas/engine'
              type:
                type: string
                description: Describes the type of operation.
            example:
                - _id: marengo
                  allowed_index_options:
                    - visual
                    - text_in_video
                    - conversation
                  author: twelve_labs
                  created_at: '2022-07-24 09:30:52.683 +0000 UTC'
                  finetune: false
                  ready: true
                  type: engine
                  updated_at: '2022-07-24 09:30:52.683 +0000 UTC'
                - _id: marengo2
                  allowed_index_options:
                    - visual
                    - text_in_video
                    - conversation
                  author: twelve_labs
                  created_at: '2022-07-24 09:30:52.686 +0000 UTC'
                  finetune: false
                  ready: true
                  type: engine
                  updated_at: '2022-07-24 09:30:52.686 +0000 UTC'
                
    createIndexResponse:
      description: An index has successfully been created
      content:
        application/json:
          schema:
            properties:
              _id:
                type: string
                description: Represents the unique identifier of the `index` object.
              message:
                type: string
                description: A human-readable string describing the result.
              type:
                type: string
                description: Describes the type of operation.
            example:
              _id: 62d85fe7340fa665f1fda5dd
              message: Succesfully created index 'myIndex' index.
              example: index_create
    genericError:
      description: The request has failed.
      content:
        application/json:
          schema:
            type: object
            properties:
              error_code:
                type: string
                description: |
                  Represents the code associated with the error. See the [Error Codes](/api-reference/error-codes) page for details.
              message:
                type: string
                description: A human-readable string describing the error.

  requestBodies:
    search:
      content:
        application/json:
          schema:
            required:
              - query
              - index_id
            type: object
            properties:
              query:
                type: string
                description: |
                  Your search query. Note that the API supports full natural language-based search. The following examples are valid queries: "birds flying near a castle", "sun shining on water", "chickens on the road", "an officer holding a child's hand.", "crowd cheering in the stadium."
              index_id:
                type: string
                description: |
                  The unique identifier of the index to search.
              search_options:
                type: array
                items:
                  type: string
                minItems: 1
                maxItems: 3
                example:
                  - visual
                  - conversation
                description: |
                  Search options specify the source of information the API service uses when performing a search. The following values are supported:
                  - `visual`: Allows you to search by objects, actions, sound, movements, places, situational events, and complex audio-visual text descriptions.
                  - `conversation`: Allows you to find the exact point in your video where the specified word or phrase is mentioned.
                  - `text_in_video`: Allows you to search for text that appears in your videos (OCR).

                  The search options you specify must be a subset of the indexing options used when you created the index.
                  You can specify multiple search options in conjunction with the `operator` parameter described below to broaden or narrow your search.
              operator:
                type: string
                description: |
                  When you specify more than one search option, you can use this parameter to indicate the logical operation that the API service should perform.
                    
                    The following logical operators are supported:
                    
                    - `or`: The API returns the results for which any search option matches.
                    
                    - `and`: The API returns only the results for which all search options match.

                    For details and examples, see the [Multiple Search Options](/guides/performing-searches/multiple-search-options) page.

                    
                    **Default**: `or`.
              conversation_option:
                type: string
                enum:
                  - semantic
                  - transcription
                description: |
                  Specifies the type of search the API service will perform. The following values are supported:
                  - `semantic`: The API service returns results that are semantically similar to the search query even if the results don't exactly match the search query.
                  - `transcription`: The API service returns only the exact matches. Note that `transcription` can only be used with a single search option. For example, you cannot set the `search_option parameter` to equal `["visual", "conversation", "text_in_video"]` and the `conversation_option` parameter to equal `transcription`.

                  **Default**: `semantic`. 
              page_limit:
                type: integer
                description: |
                  The number of items to return on each page.

                  **Default**: `10`.

                  **Max**: `100`.
              filter:
                type: object
                description: |
                  For string fields, the filter `parameter` returns only the results that equal the value you specify. The following example filters on the videos whose title is "Animal Encounters part 1": `"title": "Animal Encounters part 1"`.
                  For numeric fields, the `filter` parameter returns the results that match based on the arithmetic comparison. The following example filters on the videos whose height is greater than or equal to 400 and less than or equal to 500: `"height": { "gte": 400, "lte": 500 }`.

                  For more details and examples, see the [Filter Search Results Based on Metadata](/concepts/filtering/metadata) page.
                properties:
                  id:
                    type: array
                    description: An array of strings that restricts your search results based on the specified video IDs.
                    items:
                      type: string
                  duration:
                    type: number
                    description: 'A numeric field that restricts your search results based on duration, expressed in seconds.'
                  width:
                    type: number
                    description: A numeric field that restricts your search results based on width.
                  height:
                    type: number
                    description: A numeric field that restricts your search results based on height.
                  size:
                    type: number
                    description: 'A numeric field that restricts your search results based on size, expressed in bytes.'
                  title:
                    type: string
                    description: A string field that restricts your search results based on the title of the video.
    cloud-to-cloud-transfer:
      content:
        multipart/form-data:
          schema:
            type: object
            properties:
              file:
                description: |
                  A JSON file containing the list of video files to be transferred and indexed.
                type: string
                format: binary
    createVideoIndexingTask:
      required: true
      content:
        multipart/form-data:
          schema:
            type: object
            required:
              - index_id
            properties:
              index_id:
                type: string
                description: |
                  The unique identifier of the index to which the video is being uploaded.
              provide_transcription:
                type: boolean
                description: |
                  A boolean value specifying whether or not you provide a transcription for this video.
              language:
                type: string
                description: Must be set to `en`.
              video_file:
                type: string
                format: binary
                description: |
                  Specify this parameter to upload a video from your local file system.
              transcription_file:
                type: string
                format: binary
                description: |
                  When the provide_transcription parameter is set to `true`, and you want to provide a transcription from the local file system, use the `transcription_file` parameter to pass your transcription file to the API service. It must be a stream of bytes encoded as `multipart/form-data`. The transcription must be in the SRT or VTT format.
              video_url:
                type: string
                description: |
                  Specify this parameter to upload a video from a publicly accessible URL.
              transcription_url:
                type: string
                description: |
                  When the `provide_transcription` parameter is set to `true`, and you want to provide a transcription from a publicly accessible URL, use the `transcription_url` parameter to specify the URL of your transcription. The transcription must be in the SRT or VTT format.
    updateIndex:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              index_name:
                type: string
                description: |
                  The name of the index.
    createIndex:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                engine_id:
                  type: string
                  description: |
                    Specifies the search engine. The following options are available:
                      - `marengo2`
                      
                      - `marengo`

                    **NOTES**:

                      - Twelve Labs strongly recommends you use `marengo2`.

                      - You cannot change the engine once the index has been created.
                index_options:
                  type: array
                  description: |
                    Must be a subset of `["visual", "conversation", "text_in_video"]`.

                    **NOTES**:
                    - Twelve Labs strongly recommends you use marengo2.
                    - You cannot change the engine once the index has been created.
                  items:
                    type: string
                  minItems: 1
                  maxItems: 3
                  default:
                    - visual
                    - conversation
                    - text_in_video
                index_name:
                  type: string
                  description: |
                    The name of the index. Make sure you use a succinct and descriptive name.
            example:
              engine_id: marengo2
              index_options:
                - visual
                - conversation
                - text_in_video
              index_name: myIndex